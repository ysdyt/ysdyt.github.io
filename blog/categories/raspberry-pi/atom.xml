<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Raspberry Pi | ysdyt.net for tech memo]]></title>
  <link href="http://ysdyt.github.io/blog/categories/raspberry-pi/atom.xml" rel="self"/>
  <link href="http://ysdyt.github.io/"/>
  <updated>2015-03-28T01:16:34+09:00</updated>
  <id>http://ysdyt.github.io/</id>
  <author>
    <name><![CDATA[Yuta Yoshida]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Raspberry PiをWiMAXを使ってネット接続する]]></title>
    <link href="http://ysdyt.github.io/blog/2015/03/28/raspi-wifi-setting/"/>
    <updated>2015-03-28T01:15:29+09:00</updated>
    <id>http://ysdyt.github.io/blog/2015/03/28/raspi-wifi-setting</id>
    <content type="html"><![CDATA[<p>自宅では固定回線のネット契約をしていないので、WiMAXの無線ルーターを使っていつもネットに繋いでいる。<br/>
ラズパイのネット接続解説はほとんどが有線ケーブルでの接続を前提にしているため、Wi-Fiでの接続方法を個人的な備忘録としてメモ。</p>

<p>以下、Wi-Fiの設定は<a href="http://qiita.com/R-STYLE/items/8d37fb59e4872faee2bc">こちら</a>をほぼそのままコピペした。+αで個人的な補足を追加。</p>

<!--more-->


<p><br></p>

<h3>使用したWi-Fiドングル</h3>

<p>Rapberry Piの無線化には以下のドングルを使用。700円ほど。</p>

<p>・<a href="http://www.amazon.co.jp/gp/product/B003NSAMW2/ref=pd_lpo_sbs_dp_ss_1?pf_rd_p=466449256&amp;pf_rd_s=lpo-top-stripe&amp;pf_rd_t=201&amp;pf_rd_i=B00879RO8W&amp;pf_rd_m=AN1VRQENFRJN5&amp;pf_rd_r=1RA98FWJ7XSKXHKYNV1M">BUFFALO 無線LAN子機 コンパクトモデル 11n技術・11g/b対応 WLI-UC-GNM</a></p>

<p><br></p>

<h3>/etc/network/interfacesの編集</h3>

<pre><code class="bash">$ sudo nano /etc/network/interfaces
</code></pre>

<p>開いたファイルの中の下記2行を編集</p>

<pre><code class="bash">iface wlan0 inet manual
wpa-roam /etc/wpa_supplicant/wpa_supplicant.conf
</code></pre>

<p>↓</p>

<pre><code class="bash">iface wlan0 inet dhcp
wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf
</code></pre>

<h3>アクセスポイントのスキャン</h3>

<pre><code class="bash">$ sudo iwlist wlan0 scan | grep ESSID
</code></pre>

<p>実行すると、現在捕まえられるWi-Fiのネットワーク名（SSID）一覧が表示される。接続したいネットワーク名が存在するか確認。</p>

<h3>アクセスポイントに接続テスト</h3>

<pre><code class="bash">$ sudo iwconfig wlan0 essid 接続先のSSID key s:接続先のパスワード
</code></pre>

<h3>接続の確認</h3>

<pre><code class="bash">$ iwconfig wlan0 | grep ESSID
</code></pre>

<p>実行の結果、パスワードが合っていて、接続が可能であれば以下の様な表示が出る</p>

<pre><code class="bash">wlan0     IEEE 802.11bgn  ESSID:"接続先のSSID"
</code></pre>

<h3>接続情報の設定書き込み</h3>

<pre><code class="bash">$ sudo su -   #rootになる
$ wpa_passphrase "接続先のSSID" "接続先のパスワード" &gt;&gt; /etc/wpa_supplicant/wpa_supplicant.conf  #ファイルへ情報の書き込み
</code></pre>

<p>この結果 /etc/wpa_supplicant/wpa_supplicant.confファイルの中身に以下の情報が入っていればok</p>

<pre><code class="bash">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
network={
        ssid="接続先のSSID"
        #psk="接続先のパスワード"
        psk=041015142746f4083a95c08ec26e2464687d305e7b0a635448eb3289e834090d
}
</code></pre>

<p>最後に pskの行の後に <code>scan_ssid=1</code>を追加。</p>

<pre><code class="bash">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
network={
        ssid="接続先のSSID"
        #psk="接続先のパスワード"
        psk=041015142746f4083a95c08ec26e2464687d305e7b0a635448eb3289e834090d
        scan_ssid=1
}
</code></pre>

<p>別の機会に他のネットワークへの接続を追加で書き込むと、</p>

<pre><code class="bash">network={
        ssid="接続先のSSID"
        hogehogehoge...
}
network={
        ssid="接続先のSSID2"
        hogehogehoge...
}
network={
        ssid="接続先のSSID3"
        hogehogehoge...
}
</code></pre>

<p>という感じで、おしりに設定情報がどんどん追加されていく。</p>

<h3>再起動</h3>

<p>ここまで設定が完了したら後は再起動で設定を反映させるだけ。</p>

<pre><code class="bash">$ sudo reboot
</code></pre>

<p>再起動後、自動でWi-Fiに接続されているはず。ブラウザなどでネット接続できるか確認してみる。</p>

<h2><br></h2>

<h3>SSHでRaspberry Piにリモートログイン</h3>

<p>上記までの手順でネットに接続できていれば、IPアドレスが取得できているはずなのでIPアドレスを確認。</p>

<pre><code class="bash">$ ifconfig wlan0
</code></pre>

<p>以下のような内容が表示される。</p>

<pre><code class="bash">wlan0     Link encap:イーサネット  ハードウェアアドレス cc:e1:d5:17:4f:32
          inetアドレス:192.168.0.3 ブロードキャスト:192.168.0.255  マスク:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  メトリック:1
          RXパケット:3799 エラー:0 損失:0 オーバラン:0 フレーム:0
          TXパケット:687 エラー:0 損失:0 オーバラン:0 キャリア:0
      衝突(Collisions):0 TXキュー長:1000
          RXバイト:1046888 (1022.3 KiB)  TXバイト:88642 (86.5 KiB)
</code></pre>

<p>このinetアドレスの値（英語環境では inet addrの値）を使って、</p>

<pre><code class="bash">$ ssh pi@192.168.0.3
</code></pre>

<p>とsshし、ログインパスワードを入れればリモートログイン出来て、自前のMacやWinからアクセスしてラズパイの操作が可能になる。（今回はdhcpの設定であり、固定アドレスではないの、ラズパイの電源を落としたりするとsshできなくなる）</p>

<p>固定アドレスの設定方法はまた別エントリーにて。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry PiのCLI/GUIログインの切り替え]]></title>
    <link href="http://ysdyt.github.io/blog/2015/03/27/raspi-cli-gui-login/"/>
    <updated>2015-03-27T22:42:58+09:00</updated>
    <id>http://ysdyt.github.io/blog/2015/03/27/raspi-cli-gui-login</id>
    <content type="html"><![CDATA[<h3>CLIからGUIへの一時的な切り替え</h3>

<p>Rapberry Piを初めに起動した時はCLIから始まる。GUIへは切り替えは下記のコマンドを実行</p>

<pre><code class="bash">$ startx
</code></pre>

<p>少し待てば自動的にGUIのデスクトップが表示される。</p>

<!--more-->


<p><br></p>

<h3>起動時から自動でGUIが立ち上がるようにする</h3>

<p>raspi-configを起動</p>

<pre><code class="bash">$ sudo raspi-config
</code></pre>

<p>メニューから<br/>
「3 Enable Boot to Desktop/Scratch」を選び、<br/>
「Desktop Log in as user &lsquo;pi&rsquo; at the graphical desktop」で「了解」を選択<br/>
再起動を求められたら従う</p>

<pre><code class="bash">$ sudo reboot
</code></pre>

<p>すると最初からGUIデスクトップ画面で起動するようになる。</p>

<p><br></p>

<h3>初期起動をCLIに戻す</h3>

<p>GUI起動にした後、再びCLI起動に戻したければ、</p>

<pre><code class="bash">$ sudo raspi-config
</code></pre>

<p>メニューから<br/>
「3 Enable Boot to Desktop/Scratch」を選び、<br/>
「Console Text console, requiring login (default)」で「了解」を選択<br/>
その後、再起動をかけるとCLIから始まるようになっている</p>
]]></content>
  </entry>
  
</feed>
